<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="Button1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        skHKTd8NyD+QAV5MVaFaUgAAAABJRU5ErkJggg==
</value>
  </data>
</root>